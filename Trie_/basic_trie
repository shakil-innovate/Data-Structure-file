#include<bits/stdc++.h>
using namespace std;

struct Node
{
    Node* links[26];

    bool flag=false;

    Node()
    {
        for(int i=0; i<26 ; i++)
        {
            links[i]=nullptr;
        }

    }
};

void insert(string word,Node *root)
{
    Node* node=root;

     for(int i=0 ; i<word.size(); i++)
     {
        if(node->links[word[i]-'a']==nullptr)
        {
            node->links[word[i]-'a']=new Node();
        }
        node=node->links[word[i]-'a'];
     }
     node->flag=true;

}

void search(string word,Node* root)
{
    Node* node=root;

    for(int i=0; i<word.length() ;i++)
    {
        if(node->links[word[i]-'a']==nullptr)
        {
            cout<<word <<" not store in trie"<<endl;
            return;
        }
        else node = node->links[word[i]-'a'];
    }

    if(node->flag==true)
       cout<<word<<" is stored in trie"<<endl;
    else
    cout<<word <<" is a prefix not word"<<endl;
    
}


int main()
{
    int n;      cin>>n;
    vector<string>s(n);

    for(int i=0; i<n ;i++)
    {
        cin>>s[i];
    }

    Node* root=new Node();

    for(int i=0; i<n ;i++)
    {
        insert(s[i],root);
    }

    int q;  cin>>q;
    vector<string>query(q);

    for(int i=0 ; i<n; i++) cin>>query[i];

    for(int i=0; i<q; i++)
    {
        search(query[i],root);
    }
}
