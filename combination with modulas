#include<bits/stdc++.h>
using namespace std;
typedef long long ll;

const ll mod=1e9+7;
const ll N=1e5;
ll fact[N],invFact[N];


ll power(ll a, ll b)
{
    ll res=1;
    a%=mod;

        while(b > 0)
        {
            if(b & 1)   res=(res*a) %mod;

            a=(a*a)%mod;
            b=b>>1;
        }

    return res;
}

void precompute()
{
    fact[0]= invFact[0]=1;

    for(int i=1 ; i< N ;i++)
    {
        fact[i]=fact[i-1]*i%mod;
    }

    for(int i=1; i<N ;i++)
    {
        invFact[i]=power(fact[i],mod-2);
    }
}

ll nCr(ll n,ll r)
{
    if(r>n) return 0;

    return (fact[n]* invFact[r] % mod *invFact[n-r] % mod)% mod;
}


void shakil()
{
    cout<<nCr(9,5);
}   

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);

       precompute();

        // int tt;     cin>>tt;
        // while(tt--)
          shakil();
}
